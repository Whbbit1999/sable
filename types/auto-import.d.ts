/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection JSUnusedGlobalSymbols
// Generated by unplugin-auto-import
export {}
declare global {
  const ArticleFormField: typeof import('../src/config/form')['ArticleFormField']
  const CacheEnum: typeof import('../src/enum/cacheEnums')['CacheEnum']
  const ContentTypeEnum: typeof import('../src/enum/httpEnums')['ContentTypeEnum']
  const EffectScope: typeof import('vue')['EffectScope']
  const RequestMethodEnum: typeof import('../src/enum/httpEnums')['RequestMethodEnum']
  const RouteEnum: typeof import('../src/enum/routeEnum')['RouteEnum']
  const RouteNameEnum: typeof import('../src/enum/routeEnum')['RouteNameEnum']
  const SystemFormField: typeof import('../src/config/form')['SystemFormField']
  const UserTableButton: typeof import('../src/config/table')['UserTableButton']
  const UserTableField: typeof import('../src/config/table')['UserTableField']
  const appStore: typeof import('../src/store/appStore')['appStore']
  const computed: typeof import('vue')['computed']
  const config: typeof import('../src/config/config')['default']
  const createApp: typeof import('vue')['createApp']
  const customRef: typeof import('vue')['customRef']
  const darkThemeOverrides: typeof import('../src/config/theme')['darkThemeOverrides']
  const defineAsyncComponent: typeof import('vue')['defineAsyncComponent']
  const defineComponent: typeof import('vue')['defineComponent']
  const effectScope: typeof import('vue')['effectScope']
  const getCurrentInstance: typeof import('vue')['getCurrentInstance']
  const getCurrentScope: typeof import('vue')['getCurrentScope']
  const h: typeof import('vue')['h']
  const inject: typeof import('vue')['inject']
  const isProxy: typeof import('vue')['isProxy']
  const isReactive: typeof import('vue')['isReactive']
  const isReadonly: typeof import('vue')['isReadonly']
  const isRef: typeof import('vue')['isRef']
  const lightThemeOverrides: typeof import('../src/config/theme')['lightThemeOverrides']
  const lineChartsOptions: typeof import('../src/config/charts')['lineChartsOptions']
  const markRaw: typeof import('vue')['markRaw']
  const menuStore: typeof import('../src/store/menuStore')['menuStore']
  const nextTick: typeof import('vue')['nextTick']
  const onActivated: typeof import('vue')['onActivated']
  const onBeforeMount: typeof import('vue')['onBeforeMount']
  const onBeforeRouteLeave: typeof import('vue-router')['onBeforeRouteLeave']
  const onBeforeRouteUpdate: typeof import('vue-router')['onBeforeRouteUpdate']
  const onBeforeUnmount: typeof import('vue')['onBeforeUnmount']
  const onBeforeUpdate: typeof import('vue')['onBeforeUpdate']
  const onDeactivated: typeof import('vue')['onDeactivated']
  const onErrorCaptured: typeof import('vue')['onErrorCaptured']
  const onMounted: typeof import('vue')['onMounted']
  const onRenderTracked: typeof import('vue')['onRenderTracked']
  const onRenderTriggered: typeof import('vue')['onRenderTriggered']
  const onScopeDispose: typeof import('vue')['onScopeDispose']
  const onServerPrefetch: typeof import('vue')['onServerPrefetch']
  const onUnmounted: typeof import('vue')['onUnmounted']
  const onUpdated: typeof import('vue')['onUpdated']
  const pageSizes: typeof import('../src/config/table')['pageSizes']
  const pipeChartsOptions: typeof import('../src/config/charts')['pipeChartsOptions']
  const pipeChartsOptions2: typeof import('../src/config/charts')['pipeChartsOptions2']
  const provide: typeof import('vue')['provide']
  const radarsChartOptons: typeof import('../src/config/charts')['radarsChartOptons']
  const reactive: typeof import('vue')['reactive']
  const readonly: typeof import('vue')['readonly']
  const ref: typeof import('vue')['ref']
  const resolveComponent: typeof import('vue')['resolveComponent']
  const shallowReactive: typeof import('vue')['shallowReactive']
  const shallowReadonly: typeof import('vue')['shallowReadonly']
  const shallowRef: typeof import('vue')['shallowRef']
  const themeStore: typeof import('../src/store/themeStore')['themeStore']
  const toRaw: typeof import('vue')['toRaw']
  const toRef: typeof import('vue')['toRef']
  const toRefs: typeof import('vue')['toRefs']
  const toValue: typeof import('vue')['toValue']
  const triggerRef: typeof import('vue')['triggerRef']
  const unref: typeof import('vue')['unref']
  const useAppStore: typeof import('../src/store/useAppStore')['useAppStore']
  const useAttrs: typeof import('vue')['useAttrs']
  const useCharts: typeof import('../src/composables/useCharts')['default']
  const useCssModule: typeof import('vue')['useCssModule']
  const useCssVars: typeof import('vue')['useCssVars']
  const useDialog: typeof import('naive-ui')['useDialog']
  const useHistoryMenuStore: typeof import('../src/store/useHistoryMenuStore')['useHistoryMenuStore']
  const useLink: typeof import('vue-router')['useLink']
  const useLoadingBar: typeof import('naive-ui')['useLoadingBar']
  const useMenuStore: typeof import('../src/store/useMenuStore')['useMenuStore']
  const useMessage: typeof import('naive-ui')['useMessage']
  const useNotification: typeof import('naive-ui')['useNotification']
  const useRoute: typeof import('vue-router')['useRoute']
  const useRouter: typeof import('vue-router')['useRouter']
  const useSlots: typeof import('vue')['useSlots']
  const useTable: typeof import('../src/composables/useTable')['default']
  const useUpload: typeof import('../src/composables/useUpload')['default']
  const useUserStore: typeof import('../src/store/useUserStore')['useUserStore']
  const useWait: typeof import('../src/composables/useWait')['default']
  const userStore: typeof import('../src/store/useUserStore')['userStore']
  const watch: typeof import('vue')['watch']
  const watchEffect: typeof import('vue')['watchEffect']
  const watchPostEffect: typeof import('vue')['watchPostEffect']
  const watchSyncEffect: typeof import('vue')['watchSyncEffect']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Component, ComponentPublicInstance, ComputedRef, InjectionKey, PropType, Ref, VNode, WritableComputedRef } from 'vue'
}
